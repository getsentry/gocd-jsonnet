{
   "example-monitor.yaml": {
      "format_version": 10,
      "pipelines": {
         "deploy-example-monitor": {
            "display_order": 2,
            "group": "example",
            "materials": {
               "deploy-example-pipeline-complete": {
                  "pipeline": "deploy-example",
                  "stage": "pipeline-complete"
               },
               "example_repo": {
                  "branch": "master",
                  "destination": "example",
                  "git": "git@github.com:getsentry/example.git",
                  "shallow_clone": true
               }
            },
            "region": "monitor",
            "stages": [
               {
                  "ready": {
                     "jobs": {
                        "ready": {
                           "tasks": [
                              {
                                 "exec": {
                                    "command": true
                                 }
                              }
                           ]
                        }
                     }
                  }
               },
               {
                  "wait": {
                     "approval": {
                        "type": "manual"
                     },
                     "jobs": {
                        "wait": {
                           "tasks": [
                              {
                                 "exec": {
                                    "command": true
                                 }
                              }
                           ]
                        }
                     }
                  }
               },
               {
                  "example_stage": { }
               },
               {
                  "pipeline-complete": {
                     "approval": {
                        "allow_only_on_success": true,
                        "type": "success"
                     },
                     "jobs": {
                        "pipeline-complete": {
                           "tasks": [
                              {
                                 "exec": {
                                    "command": true
                                 }
                              }
                           ]
                        }
                     }
                  }
               }
            ]
         }
      }
   },
   "example-us.yaml": {
      "format_version": 10,
      "pipelines": {
         "deploy-example-us": {
            "display_order": 3,
            "group": "example",
            "materials": {
               "deploy-example-monitor-pipeline-complete": {
                  "pipeline": "deploy-example-monitor",
                  "stage": "pipeline-complete"
               },
               "example_repo": {
                  "branch": "master",
                  "destination": "example",
                  "git": "git@github.com:getsentry/example.git",
                  "shallow_clone": true
               }
            },
            "region": "us",
            "stages": [
               {
                  "ready": {
                     "jobs": {
                        "ready": {
                           "tasks": [
                              {
                                 "exec": {
                                    "command": true
                                 }
                              }
                           ]
                        }
                     }
                  }
               },
               {
                  "wait": {
                     "approval": {
                        "type": "manual"
                     },
                     "jobs": {
                        "wait": {
                           "tasks": [
                              {
                                 "exec": {
                                    "command": true
                                 }
                              }
                           ]
                        }
                     }
                  }
               },
               {
                  "example_stage": { }
               },
               {
                  "pipeline-complete": {
                     "approval": {
                        "allow_only_on_success": true,
                        "type": "success"
                     },
                     "jobs": {
                        "pipeline-complete": {
                           "tasks": [
                              {
                                 "exec": {
                                    "command": true
                                 }
                              }
                           ]
                        }
                     }
                  }
               }
            ]
         }
      }
   },
   "example.yaml": {
      "format_version": 10,
      "pipelines": {
         "deploy-example": {
            "display_order": 0,
            "group": "example",
            "lock_behavior": "unlockWhenFinished",
            "materials": {
               "init_repo": {
                  "branch": "master",
                  "destination": "init",
                  "git": "git@github.com:getsentry/init.git",
                  "shallow_clone": true
               }
            },
            "stages": [
               {
                  "pipeline-complete": {
                     "approval": {
                        "type": "manual"
                     },
                     "jobs": {
                        "pipeline-complete": {
                           "tasks": [
                              {
                                 "exec": {
                                    "command": true
                                 }
                              }
                           ]
                        }
                     }
                  }
               }
            ]
         }
      }
   },
   "rollback-example.yaml": {
      "format_version": 10,
      "pipelines": {
         "rollback-example": {
            "display_order": 1,
            "environment_variables": {
               "ALL_PIPELINE_FLAGS": "--pipeline=\"deploy-example-monitor\" --pipeline=\"deploy-example-us\" --pipeline=\"deploy-example\"",
               "GOCD_ACCESS_TOKEN": "{{SECRET:[devinfra][gocd_access_token]}}",
               "REGION_PIPELINE_FLAGS": "--pipeline=\"deploy-example-monitor\" --pipeline=\"deploy-example-us\"",
               "ROLLBACK_MATERIAL_NAME": "example_repo",
               "ROLLBACK_STAGE": "example_stage"
            },
            "group": "example",
            "lock_behavior": "unlockWhenFinished",
            "materials": {
               "deploy-example-us-pipeline-complete": {
                  "pipeline": "deploy-example-us",
                  "stage": "pipeline-complete"
               }
            },
            "stages": [
               {
                  "pause_pipelines": {
                     "approval": {
                        "type": "manual"
                     },
                     "jobs": {
                        "rollback": {
                           "elastic_profile_id": "example_profile",
                           "tasks": [
                              {
                                 "script": "##!/bin/bash\n\n## Note: $ALL_PIPELINE_FLAGS has no quoting, for word expansion\n## shellcheck disable=SC2086\nif [[ \"${ALL_PIPELINE_FLAGS:-}\" ]]; then\n  set -- $ALL_PIPELINE_FLAGS\nfi\n\n## Pause all pipelines in the pipedream\ngocd-pause-and-cancel-pipelines \\\n  --pause-message=\"This pipeline is being rolled back, please check with team before un-pausing.\" \\\n  \"$@\"\n"
                              }
                           ]
                        }
                     }
                  },
                  "start_rollback": {
                     "jobs": {
                        "rollback": {
                           "elastic_profile_id": "example_profile",
                           "tasks": [
                              {
                                 "script": "##!/bin/bash\n\n## Note: $REGION_PIPELINE_FLAGS has no quoting, for word expansion\n## shellcheck disable=SC2086\nif [[ \"${REGION_PIPELINE_FLAGS:-}\" ]]; then\n  set -- $REGION_PIPELINE_FLAGS\nfi\n\n## Get sha from the given pipeline run to deploy to all pipedream pipelines.\nsha=$(gocd-sha-for-pipeline --material-name=\"${ROLLBACK_MATERIAL_NAME}\")\n\ngocd-emergency-deploy \\\n  --commit-sha=\"${sha}\" \\\n  --deploy-stage=\"${ROLLBACK_STAGE}\" \\\n  --pause-message=\"This pipeline was rolled back, please check with team before un-pausing.\" \\\n  \"$@\"\n"
                              }
                           ]
                        }
                     }
                  }
               }
            ]
         }
      }
   }
}
